kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka
  namespace: kafka
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      volumes:
        - name: secrets
          secret:
            secretName: "kafka-store"
            items:
              - key: kafka.server.keystore.jks
                path: kafka.keystore.jks
              - key: kafka.server.truststore.jks
                path: kafka.truststore.jks
              - key: key-creds
                path: key-creds
              - key: truststore-creds
                path: truststore-creds
              - key: keystore-creds
                path: keystore-creds            
      containers:
      - name: broker
        volumeMounts:
            - name: secrets
              mountPath: /bitnami/kafka/config/certs
              readOnly: true           
        image: bitnami/kafka:3.4.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ZOOKEEPER_PROTOCOL
          value: 'PLAINTEXT://0.0.0.0:9092'
        - name: BITNAMI_DEBUG
          value: "true"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "true"
        - name: KAFKA_ENABLE_KRAFT
          value: "false"
        - name: KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
          value: ""
        - name: KAFKA_ADVERTISED_LISTENERS
          value: 'PLAINTEXT://kafka.kafka.svc.cluster.local:9092,SSL://kafka.kafka.svc.cluster.local:9094'
        - name: KAFKA_LISTENERS
          value: 'SSL://0.0.0.0:9094,PLAINTEXT://0.0.0.0:9092'
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_SSL_KEYSTORE_CREDENTIALS
          value: keystore-creds
        - name: KAFKA_SSL_KEY_CREDENTIALS
          value: key-creds
        - name: KAFKA_SSL_TRUSTSTORE_CREDENTIALS
          value: truststore-creds          
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: 'zookeeper.kafka.svc.cluster.local:2181'
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: SSL:SSL,PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        - name: KAFKA_SSL_CLIENT_AUTH
          value: "required"
        - name: KAFKA_SECURITY_INTER_BROKER_PROTOCOL
          value: "SSL"
        - name: KAFKA_SSL_KEYSTORE_FILENAME
          value: kafka.server.keystore.jks    
        - name: KAFKA_SSL_TRUSTSTORE_FILENAME
          value: kafka.server.truststore.jks
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: kafka
spec:
  selector:
    app: kafka
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: kafka
  labels:
    app: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: bitnami/zookeeper:3.8.1
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        - name: ZOO_ENABLE_AUTH
          value: 'no'
        - name: ALLOW_ANONYMOUS_LOGIN
          value: 'yes'
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: kafka
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
